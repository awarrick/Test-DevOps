# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool: local

stages: 
- stage: Build
  displayName: 'Build Stage'
  jobs:
  - job: Build
    displayName: 'BuildJob'
    steps:

    - script: echo "Build"
      displayName: 'Build app'


- stage: Test
  displayName: 'Test Stage'
  jobs:
  - job: Unit_Test
    displayName: 'TestJob'
    steps:
    - task: CmdLine@2
      inputs:
        script: 'curl -d ''{"name":"Test-summary-1.0.0"}'' -H ''Content-Type: application/json'' ''https://dev230827.service-now.com/api/sn_devops/v2/devops/tool/notification?toolId=0204bf13836b121001b491d6feaad389'''
    
  - job: Checkmarx_Scan
    displayName: 'Checkmarkjob'
    steps:
    - script: echo "Checkmarx Scan"
      displayName: 'Checmarxscript'



- stage: Deploy
  displayName: 'DeployStage'
  jobs:
  - job: UAT_Deploy
    displayName: 'UATjob'
    steps:
    - task: ServiceNow-DevOps-Agent-Package-Registration@1
      inputs:
        connectedServiceName: 'ServiceNow ADO'
        packageName: 'Test package'
        artifactsPayload: |
          {
              "artifacts": [
              {
                  "name": "BuildJob",
                  "repositoryName": "BuildJob",
                  "version": "1.$(build.buildId)",
                  "pipelineName":"$(system.teamProject)/$(build.definitionName)",
                  "taskExecutionNumber":"$(build.buildId)",
                  "stageName":"$(system.jobDisplayName)",
                  "branchName":"$(build.sourceBranchName)"
              }],
              "pipelineName":"$(system.teamProject)/$(build.definitionName)",
              "taskExecutionNumber":"$(build.buildId)",
              "stageName":"$(system.jobDisplayName)",
              "branchName":"$(build.sourceBranchName)"
          }
    - script: echo "UAT Deploy"
      displayName: 'UATScript'
  - job: Production_Deploy
    displayName: 'DeployJob'
    steps:
    - script: echo "Production Deploy"
